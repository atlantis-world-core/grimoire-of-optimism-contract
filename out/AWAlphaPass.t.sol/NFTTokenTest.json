{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testClaimTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testClaimUnwhitelisted",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testDoubleClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testOwnable",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTokenURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "193:2144:14:-:0;;;;;1572:26:0;;;170:28:1;-1:-1:-1;;170:28:1;;;;;;259:65:14;;;-1:-1:-1;;;;;;259:65:14;282:42;259:65;;;342:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;331:23:14;;;-1:-1:-1;;;;;;331:23:14;-1:-1:-1;;;;;331:23:14;;;;;;;;;;193:2144;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "193:2144:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;828:193;;;:::i;:::-;;437:385;;;:::i;1742:290::-;;;:::i;1027:234::-;;;:::i;321:38:1:-;;250:64;321:38;;;;;-1:-1:-1;;;;;189:32:15;;;171:51;;159:2;144:18;321:38:1;;;;;;;;1267:194:14;;;:::i;2230:105::-;;;:::i;1819:584:0:-;;;:::i;:::-;;;398:14:15;;391:22;373:41;;361:2;346:18;1819:584:0;233:187:15;2038:186:14;;;:::i;1467:269::-;;;:::i;170:28:1:-;;;;;;;;;;;;1572:26:0;;;;;;;;;828:193:14;877:12;;868:22;;-1:-1:-1;;;868:22:14;;-1:-1:-1;;;;;877:12:14;;;868:22;;;171:51:15;250:64:1;;868:8:14;;144:18:15;;868:22:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;916:41:14;;;;;;;;;;;;;;;;;900:58;;-1:-1:-1;;;900:58:14;;250:64:1;;-1:-1:-1;900:15:14;;-1:-1:-1;900:58:14;;916:41;900:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;968:11:14;;1003:10;;968:46;;-1:-1:-1;;;968:46:14;;-1:-1:-1;;;;;968:11:14;;;;-1:-1:-1;968:34:14;;-1:-1:-1;968:46:14;;;;1526:25:15;;;1514:2;1499:18;;1380:177;968:46:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;828:193::o;437:385::-;485:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;471:11:14;:31;;-1:-1:-1;;;;;;471:31:14;-1:-1:-1;;;;;471:31:14;;;;;;;;;;524:16;;;538:1;524:16;;;;;;;;;;;;;;;;;;-1:-1:-1;;512:28:14;;;;:9;;-1:-1:-1;512:28:14;;;;:::i;:::-;;-1:-1:-1;;;550:9:14;560:1;550:12;;;;;;;;:::i;:::-;;;;;;;;:30;;;;-1:-1:-1;;;591:9:14;601:1;591:12;;;;;;;;:::i;:::-;;;;;;;;;;;:30;;;;668:12;;657:24;;;-1:-1:-1;;;;;668:12:14;;;657:24;;;171:51:15;657:24:14;;;;;;;;;144:18:15;;;657:24:14;;647:35;;;;;632:9;:12;;642:1;;632:12;;;;;;:::i;:::-;;;;;;;;:50;;;;-1:-1:-1;;;693:9:14;703:1;693:12;;;;;;;;:::i;:::-;;;;;;;;;;:30;746:1;;:20;;-1:-1:-1;;;746:20:14;;-1:-1:-1;;;;;746:1:14;;;;:9;;:20;;756:9;;746:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;733:10;:33;791:1;;:24;;-1:-1:-1;;;791:24:14;;-1:-1:-1;;;;;791:1:14;;;;:10;;:24;;802:9;;813:1;;791:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;791:24:14;;;;;;;;;;;;:::i;:::-;777:38;;;;:11;;:38;;;;;;:::i;:::-;;437:385::o;1742:290::-;1786:11;;1821:10;;1786:46;;-1:-1:-1;;;1786:46:14;;-1:-1:-1;;;;;1786:11:14;;;;:34;;:46;;;;1526:25:15;;;1514:2;1499:18;;1380:177;1786:46:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1842:11:14;;1862:12;;1842:33;;-1:-1:-1;;;1842:33:14;;-1:-1:-1;;;;;1862:12:14;;;1842:33;;;171:51:15;1842:11:14;;;-1:-1:-1;1842:19:14;;-1:-1:-1;144:18:15;;1842:33:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1894:12:14;;1885:22;;-1:-1:-1;;;1885:22:14;;-1:-1:-1;;;;;1894:12:14;;;1885:22;;;171:51:15;250:64:1;;-1:-1:-1;1885:8:14;;-1:-1:-1;144:18:15;;1885:22:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1933:51:14;;;258:55:1;1933:51:14;;;;;;;;;250:64:1;;-1:-1:-1;1917:15:14;;-1:-1:-1;1933:51:14;;;;;1917:68;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1995:11:14;;:30;;-1:-1:-1;;;1995:30:14;;-1:-1:-1;;;;;1995:11:14;;;;-1:-1:-1;1995:17:14;;-1:-1:-1;1995:30:14;;2013:11;;1995:30;;;:::i;1027:234::-;1069:11;;1104:10;;1069:46;;-1:-1:-1;;;1069:46:14;;-1:-1:-1;;;;;1069:11:14;;;;:34;;:46;;;;1526:25:15;;;1514:2;1499:18;;1380:177;1069:46:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1125:55;1134:11;;;;;;;;;-1:-1:-1;;;;;1134:11:14;-1:-1:-1;;;;;1134:31:14;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1169:10;;1125:8;:55::i;:::-;1201:11;;1227:12;;1201:52;;-1:-1:-1;;;1201:52:14;;1190:64;;-1:-1:-1;;;;;1201:11:14;;;;:25;;:52;;1227:12;;;;1241:11;;1201:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1190:10;:64::i;:::-;1027:234::o;1267:194::-;1327:12;;1318:22;;-1:-1:-1;;;1318:22:14;;-1:-1:-1;;;;;1327:12:14;;;1318:22;;;171:51:15;250:64:1;;1318:8:14;;144:18:15;;1318:22:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1366:47:14;;;258:55:1;1366:47:14;;;;;;;;;250:64:1;;-1:-1:-1;1350:15:14;;-1:-1:-1;1366:47:14;;;;;1350:64;;;;;;;;;;;;;;;:::i;2230:105::-;2280:11;;:24;;-1:-1:-1;;;2280:24:14;;2301:2;2280:24;;;1526:25:15;2271:57:14;;-1:-1:-1;;;;;2280:11:14;;:20;;1499:18:15;;2280:24:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2280:24:14;;;;;;;;;;;;:::i;:::-;2306:11;;;;;;;;;-1:-1:-1;;;;;2306:11:14;-1:-1:-1;;;;;2306:19:14;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2306:21:14;;;;;;;;;;;;:::i;:::-;2271:8;:57::i;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;6057:51:15;;;-1:-1:-1;;;6124:18:15;;;6117:34;2196:43:0;;;;;;;;;6030:18:15;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;2038:186:14:-;2078:11;;2098:12;;2078:33;;-1:-1:-1;;;2078:33:14;;-1:-1:-1;;;;;2098:12:14;;;2078:33;;;171:51:15;2078:11:14;;;:19;;144:18:15;;2078:33:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2130:11:14;;2152:12;;2130:35;;-1:-1:-1;;;2130:35:14;;-1:-1:-1;;;;;2152:12:14;;;2130:35;;;171:51:15;2121:48:14;;-1:-1:-1;2130:11:14;;;-1:-1:-1;2130:21:14;;144:18:15;;2130:35:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2167:1;2121:8;:48::i;:::-;2188:11;;:25;;;-1:-1:-1;;;2188:25:14;;;;2179:38;;-1:-1:-1;;;;;2188:11:14;;:23;;:25;;;;;;;;;;;;;;:11;:25;;;;;;;;;;;;;;1467:269;1505:11;;1540:10;;1505:46;;-1:-1:-1;;;1505:46:14;;-1:-1:-1;;;;;1505:11:14;;;;:34;;:46;;;;1526:25:15;;;1514:2;1499:18;;1380:177;1505:46:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1570:12:14;;1561:22;;-1:-1:-1;;;1561:22:14;;-1:-1:-1;;;;;1570:12:14;;;1561:22;;;171:51:15;250:64:1;;-1:-1:-1;1561:8:14;;-1:-1:-1;144:18:15;;1561:22:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1593:11:14;;:30;;-1:-1:-1;;;1593:30:14;;-1:-1:-1;;;;;1593:11:14;;;;-1:-1:-1;1593:17:14;;-1:-1:-1;1593:30:14;;1611:11;;1593:30;;;:::i;4088:277:0:-;4156:1;4151;:6;4147:212;;-1:-1:-1;;;;;;;;;;;4178:44:0;;;;7208:2:15;7190:21;;;7247:2;7227:18;;;7220:30;7286:34;7281:2;7266:18;;7259:62;-1:-1:-1;;;7352:2:15;7337:18;;7330:35;7397:3;7382:19;;7006:401;4178:44:0;;;;;;;;4241:34;4273:1;4241:34;;;;;;:::i;:::-;;;;;;;;4294;4326:1;4294:34;;;;;;:::i;:::-;;;;;;;;4342:6;:4;:6::i;:::-;4088:277;;:::o;3255:157::-;3315:9;3310:96;;-1:-1:-1;;;;;;;;;;;3345:30:0;;;;8648:2:15;8630:21;;;8687:2;8667:18;;;8660:30;8726:25;8721:2;8706:18;;8699:53;8784:2;8769:18;;8446:347;3345:30:0;;;;;;;;3389:6;:4;:6::i;14688:344::-;14824:1;14807:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14797:30;;;;;;14790:1;14773:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14763:30;;;;;;:64;14759:267;;-1:-1:-1;;;;;;;;;;;14848:43:0;;;;9281:2:15;9263:21;;;9320:2;9300:18;;;9293:30;9359:34;9354:2;9339:18;;9332:62;-1:-1:-1;;;9425:2:15;9410:18;;9403:34;9469:3;9454:19;;9079:400;14848:43:0;;;;;;;;14910:33;14941:1;14910:33;;;;;;:::i;:::-;;;;;;;;14962;14993:1;14962:33;;;;;;:::i;5202:262::-;5264:1;5259;:6;5255:203;;-1:-1:-1;;;;;;;;;;;5286:41:0;;;;10574:2:15;10556:21;;;10613:2;10593:18;;;10586:30;10652:34;10647:2;10632:18;;10625:62;-1:-1:-1;;;10718:2:15;10703:18;;10696:32;10760:3;10745:19;;10372:398;5286:41:0;;;;;;;;5346:31;5375:1;5346:31;;;;;;:::i;:::-;;;;;;;;5396;5425:1;5396:31;;;;;;:::i;2410:424::-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;11683:51:15;;;-1:-1:-1;;;11750:18:15;;;11743:34;;;;2705:4:0;11793:18:15;;;11786:34;2482:11:0;;1671:64;2579:43;;11656:18:15;;2645:67:0;;;-1:-1:-1;;2645:67:0;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;633:258:15;705:1;715:113;729:6;726:1;723:13;715:113;;;805:11;;;799:18;786:11;;;779:39;751:2;744:10;715:113;;;846:6;843:1;840:13;837:48;;;-1:-1:-1;;881:1:15;863:16;;856:27;633:258::o;896:257::-;937:3;975:5;969:12;1002:6;997:3;990:19;1018:63;1074:6;1067:4;1062:3;1058:14;1051:4;1044:5;1040:16;1018:63;:::i;:::-;1135:2;1114:15;-1:-1:-1;;1110:29:15;1101:39;;;;1142:4;1097:50;;896:257;-1:-1:-1;;896:257:15:o;1158:217::-;1305:2;1294:9;1287:21;1268:4;1325:44;1365:2;1354:9;1350:18;1342:6;1325:44;:::i;:::-;1317:52;1158:217;-1:-1:-1;;;1158:217:15:o;1562:127::-;1623:10;1618:3;1614:20;1611:1;1604:31;1654:4;1651:1;1644:15;1678:4;1675:1;1668:15;1694:127;1755:10;1750:3;1746:20;1743:1;1736:31;1786:4;1783:1;1776:15;1810:4;1807:1;1800:15;1826:469;1887:3;1925:5;1919:12;1952:6;1947:3;1940:19;1978:4;2007:2;2002:3;1998:12;1991:19;;2029:5;2026:1;2019:16;2071:2;2068:1;2058:16;2092:1;2102:168;2116:6;2113:1;2110:13;2102:168;;;2177:13;;2165:26;;2211:12;;;;2258:1;2246:14;;;;2131:9;2102:168;;;-1:-1:-1;2286:3:15;;1826:469;-1:-1:-1;;;;;1826:469:15:o;2300:266::-;2476:2;2465:9;2458:21;2439:4;2496:64;2556:2;2545:9;2541:18;2533:6;2496:64;:::i;2571:184::-;2641:6;2694:2;2682:9;2673:7;2669:23;2665:32;2662:52;;;2710:1;2707;2700:12;2662:52;-1:-1:-1;2733:16:15;;2571:184;-1:-1:-1;2571:184:15:o;2760:345::-;2972:2;2961:9;2954:21;2935:4;2992:64;3052:2;3041:9;3037:18;3029:6;2992:64;:::i;:::-;2984:72;;3092:6;3087:2;3076:9;3072:18;3065:34;2760:345;;;;;:::o;3110:275::-;3181:2;3175:9;3246:2;3227:13;;-1:-1:-1;;3223:27:15;3211:40;;3281:18;3266:34;;3302:22;;;3263:62;3260:88;;;3328:18;;:::i;:::-;3364:2;3357:22;3110:275;;-1:-1:-1;3110:275:15:o;3390:936::-;3485:6;3516:2;3559;3547:9;3538:7;3534:23;3530:32;3527:52;;;3575:1;3572;3565:12;3527:52;3608:9;3602:16;3637:18;3678:2;3670:6;3667:14;3664:34;;;3694:1;3691;3684:12;3664:34;3732:6;3721:9;3717:22;3707:32;;3777:7;3770:4;3766:2;3762:13;3758:27;3748:55;;3799:1;3796;3789:12;3748:55;3828:2;3822:9;3850:2;3846;3843:10;3840:36;;;3856:18;;:::i;:::-;3902:2;3899:1;3895:10;3885:20;;3925:28;3949:2;3945;3941:11;3925:28;:::i;:::-;3987:15;;;4057:11;;;4053:20;;;4018:12;;;;4085:19;;;4082:39;;;4117:1;4114;4107:12;4082:39;4141:11;;;;4161:135;4177:6;4172:3;4169:15;4161:135;;;4243:10;;4231:23;;4194:12;;;;4274;;;;4161:135;;;4315:5;3390:936;-1:-1:-1;;;;;;;;3390:936:15:o;4331:363::-;-1:-1:-1;;;;;4535:32:15;;4517:51;;4604:2;4599;4584:18;;4577:30;;;-1:-1:-1;;4624:64:15;;4669:18;;4661:6;4624:64;:::i;:::-;4616:72;4331:363;-1:-1:-1;;;;4331:363:15:o;4699:277::-;4766:6;4819:2;4807:9;4798:7;4794:23;4790:32;4787:52;;;4835:1;4832;4825:12;4787:52;4867:9;4861:16;4920:5;4913:13;4906:21;4899:5;4896:32;4886:60;;4942:1;4939;4932:12;5172:706;5252:6;5305:2;5293:9;5284:7;5280:23;5276:32;5273:52;;;5321:1;5318;5311:12;5273:52;5354:9;5348:16;5383:18;5424:2;5416:6;5413:14;5410:34;;;5440:1;5437;5430:12;5410:34;5478:6;5467:9;5463:22;5453:32;;5523:7;5516:4;5512:2;5508:13;5504:27;5494:55;;5545:1;5542;5535:12;5494:55;5574:2;5568:9;5596:2;5592;5589:10;5586:36;;;5602:18;;:::i;:::-;5644:53;5687:2;5668:13;;-1:-1:-1;;5664:27:15;5693:2;5660:36;5644:53;:::i;:::-;5631:66;;5720:2;5713:5;5706:17;5760:7;5755:2;5750;5746;5742:11;5738:20;5735:33;5732:53;;;5781:1;5778;5771:12;5732:53;5794:54;5845:2;5840;5833:5;5829:14;5824:2;5820;5816:11;5794:54;:::i;:::-;-1:-1:-1;5867:5:15;5172:706;-1:-1:-1;;;;5172:706:15:o;6162:371::-;-1:-1:-1;;;;;;6347:33:15;;6335:46;;6404:13;;6317:3;;6426:61;6404:13;6476:1;6467:11;;6460:4;6448:17;;6426:61;:::i;:::-;6507:16;;;;6525:1;6503:24;;6162:371;-1:-1:-1;;;6162:371:15:o;6538:274::-;6667:3;6705:6;6699:13;6721:53;6767:6;6762:3;6755:4;6747:6;6743:17;6721:53;:::i;:::-;6790:16;;;;;6538:274;-1:-1:-1;;6538:274:15:o;7576:348::-;7806:2;7795:9;7788:21;7769:4;7826:49;7871:2;7860:9;7856:18;7489:2;7477:15;;-1:-1:-1;;;7517:4:15;7508:14;;7501:36;7562:2;7553:12;;7412:159;7826:49;7818:57;;7911:6;7906:2;7895:9;7891:18;7884:34;7576:348;;;;:::o;8093:::-;8323:2;8312:9;8305:21;8286:4;8343:49;8388:2;8377:9;8373:18;8006:2;7994:15;;-1:-1:-1;;;8034:4:15;8025:14;;8018:36;8079:2;8070:12;;7929:159;9484:439;9734:2;9723:9;9716:21;9697:4;9760:49;9805:2;9794:9;9790:18;7489:2;7477:15;;-1:-1:-1;;;7517:4:15;7508:14;;7501:36;7562:2;7553:12;;7412:159;9760:49;9857:9;9849:6;9845:22;9840:2;9829:9;9825:18;9818:50;9885:32;9910:6;9902;9885:32;:::i;9928:439::-;10178:2;10167:9;10160:21;10141:4;10204:49;10249:2;10238:9;10234:18;8006:2;7994:15;;-1:-1:-1;;;8034:4:15;8025:14;;8018:36;8079:2;8070:12;;7929:159",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testClaim()": "f33cf57b",
    "testClaimTo()": "d1135a53",
    "testClaimUnwhitelisted()": "ae2dcabf",
    "testDoubleClaim()": "1482da99",
    "testOwnable()": "01d06c7f",
    "testTokenURI()": "b5b34603",
    "testWhitelist()": "284cb929",
    "vm()": "3a768463"
  },
  "ast": {
    "absolutePath": "test/AWAlphaPass.t.sol",
    "id": 25399,
    "exportedSymbols": {
      "AWAlphaPass": [
        25107
      ],
      "DSTest": [
        1786
      ],
      "Merkle": [
        23220
      ],
      "NFTTokenTest": [
        25398
      ],
      "Script": [
        2049
      ],
      "StdStorage": [
        5077
      ],
      "Test": [
        4979
      ],
      "Vm": [
        7072
      ],
      "console": [
        15136
      ],
      "console2": [
        23200
      ],
      "stdError": [
        5049
      ],
      "stdJson": [
        2409
      ],
      "stdMath": [
        6318
      ],
      "stdStorage": [
        6179
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:2295:14",
    "nodes": [
      {
        "id": 25109,
        "nodeType": "PragmaDirective",
        "src": "42:24:14",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 25110,
        "nodeType": "ImportDirective",
        "src": "68:28:14",
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25399,
        "sourceUnit": 6319,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 25112,
        "nodeType": "ImportDirective",
        "src": "97:50:14",
        "absolutePath": "src/AWAlphaPass.sol",
        "file": "src/AWAlphaPass.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25399,
        "sourceUnit": 25108,
        "symbolAliases": [
          {
            "foreign": {
              "id": 25111,
              "name": "AWAlphaPass",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25107,
              "src": "106:11:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 25114,
        "nodeType": "ImportDirective",
        "src": "148:43:14",
        "absolutePath": "lib/murky/src/Merkle.sol",
        "file": "@murky/Merkle.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25399,
        "sourceUnit": 23221,
        "symbolAliases": [
          {
            "foreign": {
              "id": 25113,
              "name": "Merkle",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23220,
              "src": "157:6:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 25398,
        "nodeType": "ContractDefinition",
        "src": "193:2144:14",
        "nodes": [
          {
            "id": 25119,
            "nodeType": "VariableDeclaration",
            "src": "229:23:14",
            "constant": false,
            "mutability": "mutable",
            "name": "awAlphaPass",
            "nameLocation": "241:11:14",
            "scope": 25398,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AWAlphaPass_$25107",
              "typeString": "contract AWAlphaPass"
            },
            "typeName": {
              "id": 25118,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 25117,
                "name": "AWAlphaPass",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25107,
                "src": "229:11:14"
              },
              "referencedDeclaration": 25107,
              "src": "229:11:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AWAlphaPass_$25107",
                "typeString": "contract AWAlphaPass"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 25122,
            "nodeType": "VariableDeclaration",
            "src": "259:65:14",
            "constant": false,
            "mutability": "mutable",
            "name": "MaxSchnaider",
            "nameLocation": "267:12:14",
            "scope": 25398,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 25120,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "259:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307862314437646144366261454639386466393762443264334662373534306330383838366530323939",
              "id": 25121,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "282:42:14",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xb1D7daD6baEF98df97bD2d3Fb7540c08886e0299"
            },
            "visibility": "internal"
          },
          {
            "id": 25129,
            "nodeType": "VariableDeclaration",
            "src": "331:23:14",
            "constant": false,
            "mutability": "mutable",
            "name": "m",
            "nameLocation": "338:1:14",
            "scope": 25398,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Merkle_$23220",
              "typeString": "contract Merkle"
            },
            "typeName": {
              "id": 25124,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 25123,
                "name": "Merkle",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 23220,
                "src": "331:6:14"
              },
              "referencedDeclaration": 23220,
              "src": "331:6:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Merkle_$23220",
                "typeString": "contract Merkle"
              }
            },
            "value": {
              "arguments": [],
              "expression": {
                "argumentTypes": [],
                "id": 25127,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "NewExpression",
                "src": "342:10:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Merkle_$23220_$",
                  "typeString": "function () returns (contract Merkle)"
                },
                "typeName": {
                  "id": 25126,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 25125,
                    "name": "Merkle",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 23220,
                    "src": "346:6:14"
                  },
                  "referencedDeclaration": 23220,
                  "src": "346:6:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Merkle_$23220",
                    "typeString": "contract Merkle"
                  }
                }
              },
              "id": 25128,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "342:12:14",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Merkle_$23220",
                "typeString": "contract Merkle"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 25132,
            "nodeType": "VariableDeclaration",
            "src": "360:19:14",
            "constant": false,
            "mutability": "mutable",
            "name": "whitelist",
            "nameLocation": "370:9:14",
            "scope": 25398,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
              "typeString": "bytes32[]"
            },
            "typeName": {
              "baseType": {
                "id": 25130,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "360:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 25131,
              "nodeType": "ArrayTypeName",
              "src": "360:9:14",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 25134,
            "nodeType": "VariableDeclaration",
            "src": "385:18:14",
            "constant": false,
            "mutability": "mutable",
            "name": "merkleRoot",
            "nameLocation": "393:10:14",
            "scope": 25398,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 25133,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "385:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 25137,
            "nodeType": "VariableDeclaration",
            "src": "409:21:14",
            "constant": false,
            "mutability": "mutable",
            "name": "merkleProof",
            "nameLocation": "419:11:14",
            "scope": 25398,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
              "typeString": "bytes32[]"
            },
            "typeName": {
              "baseType": {
                "id": 25135,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "409:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 25136,
              "nodeType": "ArrayTypeName",
              "src": "409:9:14",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 25209,
            "nodeType": "FunctionDefinition",
            "src": "437:385:14",
            "body": {
              "id": 25208,
              "nodeType": "Block",
              "src": "461:361:14",
              "statements": [
                {
                  "expression": {
                    "id": 25145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25140,
                      "name": "awAlphaPass",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25119,
                      "src": "471:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AWAlphaPass_$25107",
                        "typeString": "contract AWAlphaPass"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 25143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "485:15:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_AWAlphaPass_$25107_$",
                          "typeString": "function () returns (contract AWAlphaPass)"
                        },
                        "typeName": {
                          "id": 25142,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 25141,
                            "name": "AWAlphaPass",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 25107,
                            "src": "489:11:14"
                          },
                          "referencedDeclaration": 25107,
                          "src": "489:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AWAlphaPass_$25107",
                            "typeString": "contract AWAlphaPass"
                          }
                        }
                      },
                      "id": 25144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "485:17:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AWAlphaPass_$25107",
                        "typeString": "contract AWAlphaPass"
                      }
                    },
                    "src": "471:31:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AWAlphaPass_$25107",
                      "typeString": "contract AWAlphaPass"
                    }
                  },
                  "id": 25146,
                  "nodeType": "ExpressionStatement",
                  "src": "471:31:14"
                },
                {
                  "expression": {
                    "id": 25153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25147,
                      "name": "whitelist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25132,
                      "src": "512:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                        "typeString": "bytes32[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "34",
                          "id": 25151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "538:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          }
                        ],
                        "id": 25150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "524:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (bytes32[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 25148,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "528:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 25149,
                          "nodeType": "ArrayTypeName",
                          "src": "528:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        }
                      },
                      "id": 25152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "524:16:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[] memory"
                      }
                    },
                    "src": "512:28:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "id": 25154,
                  "nodeType": "ExpressionStatement",
                  "src": "512:28:14"
                },
                {
                  "expression": {
                    "id": 25162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 25155,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25132,
                        "src": "550:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 25157,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 25156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "560:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "550:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30783030",
                          "id": 25160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "573:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
                            "typeString": "literal_string \"0x00\""
                          },
                          "value": "0x00"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
                            "typeString": "literal_string \"0x00\""
                          }
                        ],
                        "id": 25159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "565:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 25158,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "565:7:14",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 25161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "565:15:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "550:30:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 25163,
                  "nodeType": "ExpressionStatement",
                  "src": "550:30:14"
                },
                {
                  "expression": {
                    "id": 25171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 25164,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25132,
                        "src": "591:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 25166,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 25165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "601:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "591:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30783031",
                          "id": 25169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "614:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_e127292c8f7eb20e1ae830ed6055b6eb36e261836100610d12677231d0791f7f",
                            "typeString": "literal_string \"0x01\""
                          },
                          "value": "0x01"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_e127292c8f7eb20e1ae830ed6055b6eb36e261836100610d12677231d0791f7f",
                            "typeString": "literal_string \"0x01\""
                          }
                        ],
                        "id": 25168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "606:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 25167,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "606:7:14",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 25170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "606:15:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "591:30:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 25172,
                  "nodeType": "ExpressionStatement",
                  "src": "591:30:14"
                },
                {
                  "expression": {
                    "id": 25182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 25173,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25132,
                        "src": "632:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 25175,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 25174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "642:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "632:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 25179,
                              "name": "MaxSchnaider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25122,
                              "src": "668:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 25177,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "657:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 25178,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encode",
                            "nodeType": "MemberAccess",
                            "src": "657:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 25180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "657:24:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 25176,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "647:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 25181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "647:35:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "632:50:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 25183,
                  "nodeType": "ExpressionStatement",
                  "src": "632:50:14"
                },
                {
                  "expression": {
                    "id": 25191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 25184,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25132,
                        "src": "693:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 25186,
                      "indexExpression": {
                        "hexValue": "33",
                        "id": 25185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "703:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "693:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30783033",
                          "id": 25189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "716:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_11987c15ef5ed64ec2e3cd9cfc79d7bd155aea3982ea59f35a5e6b5c1593a54b",
                            "typeString": "literal_string \"0x03\""
                          },
                          "value": "0x03"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_11987c15ef5ed64ec2e3cd9cfc79d7bd155aea3982ea59f35a5e6b5c1593a54b",
                            "typeString": "literal_string \"0x03\""
                          }
                        ],
                        "id": 25188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "708:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 25187,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "708:7:14",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 25190,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "708:15:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "693:30:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 25192,
                  "nodeType": "ExpressionStatement",
                  "src": "693:30:14"
                },
                {
                  "expression": {
                    "id": 25198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25193,
                      "name": "merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25134,
                      "src": "733:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 25196,
                          "name": "whitelist",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25132,
                          "src": "756:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                            "typeString": "bytes32[] storage ref"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                            "typeString": "bytes32[] storage ref"
                          }
                        ],
                        "expression": {
                          "id": 25194,
                          "name": "m",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25129,
                          "src": "746:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Merkle_$23220",
                            "typeString": "contract Merkle"
                          }
                        },
                        "id": 25195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getRoot",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 23316,
                        "src": "746:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes32[] memory) pure external returns (bytes32)"
                        }
                      },
                      "id": 25197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "746:20:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "733:33:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 25199,
                  "nodeType": "ExpressionStatement",
                  "src": "733:33:14"
                },
                {
                  "expression": {
                    "id": 25206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25200,
                      "name": "merkleProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25137,
                      "src": "777:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                        "typeString": "bytes32[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 25203,
                          "name": "whitelist",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25132,
                          "src": "802:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                            "typeString": "bytes32[] storage ref"
                          }
                        },
                        {
                          "hexValue": "32",
                          "id": 25204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "813:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                            "typeString": "bytes32[] storage ref"
                          },
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "expression": {
                          "id": 25201,
                          "name": "m",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25129,
                          "src": "791:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Merkle_$23220",
                            "typeString": "contract Merkle"
                          }
                        },
                        "id": 25202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getProof",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 23421,
                        "src": "791:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                          "typeString": "function (bytes32[] memory,uint256) pure external returns (bytes32[] memory)"
                        }
                      },
                      "id": 25205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "791:24:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[] memory"
                      }
                    },
                    "src": "777:38:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "id": 25207,
                  "nodeType": "ExpressionStatement",
                  "src": "777:38:14"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "446:5:14",
            "parameters": {
              "id": 25138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "451:2:14"
            },
            "returnParameters": {
              "id": 25139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "461:0:14"
            },
            "scope": 25398,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25234,
            "nodeType": "FunctionDefinition",
            "src": "828:193:14",
            "body": {
              "id": 25233,
              "nodeType": "Block",
              "src": "858:163:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25215,
                        "name": "MaxSchnaider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25122,
                        "src": "877:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25212,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "868:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7072",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "868:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "868:22:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25217,
                  "nodeType": "ExpressionStatement",
                  "src": "868:22:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                            "id": 25223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "922:34:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                              "typeString": "literal_string \"Ownable: caller is not the owner\""
                            },
                            "value": "Ownable: caller is not the owner"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                              "typeString": "literal_string \"Ownable: caller is not the owner\""
                            }
                          ],
                          "id": 25222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "916:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 25221,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "916:5:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "916:41:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 25218,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "900:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7072",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6584,
                      "src": "900:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 25225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "900:58:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25226,
                  "nodeType": "ExpressionStatement",
                  "src": "900:58:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25230,
                        "name": "merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25134,
                        "src": "1003:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25227,
                        "name": "awAlphaPass",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25119,
                        "src": "968:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AWAlphaPass_$25107",
                          "typeString": "contract AWAlphaPass"
                        }
                      },
                      "id": 25229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setWhitelistMerkleRoot",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25009,
                      "src": "968:34:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 25231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "968:46:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25232,
                  "nodeType": "ExpressionStatement",
                  "src": "968:46:14"
                }
              ]
            },
            "functionSelector": "01d06c7f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOwnable",
            "nameLocation": "837:11:14",
            "parameters": {
              "id": 25210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "848:2:14"
            },
            "returnParameters": {
              "id": 25211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "858:0:14"
            },
            "scope": 25398,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25259,
            "nodeType": "FunctionDefinition",
            "src": "1027:234:14",
            "body": {
              "id": 25258,
              "nodeType": "Block",
              "src": "1059:202:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25240,
                        "name": "merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25134,
                        "src": "1104:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25237,
                        "name": "awAlphaPass",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25119,
                        "src": "1069:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AWAlphaPass_$25107",
                          "typeString": "contract AWAlphaPass"
                        }
                      },
                      "id": 25239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setWhitelistMerkleRoot",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25009,
                      "src": "1069:34:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 25241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1069:46:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25242,
                  "nodeType": "ExpressionStatement",
                  "src": "1069:46:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 25244,
                            "name": "awAlphaPass",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25119,
                            "src": "1134:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AWAlphaPass_$25107",
                              "typeString": "contract AWAlphaPass"
                            }
                          },
                          "id": 25245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "whitelistMerkleRoot",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24957,
                          "src": "1134:31:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                            "typeString": "function () view external returns (bytes32)"
                          }
                        },
                        "id": 25246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1134:33:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 25247,
                        "name": "merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25134,
                        "src": "1169:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 25243,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 375,
                      "src": "1125:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 25248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1125:55:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25249,
                  "nodeType": "ExpressionStatement",
                  "src": "1125:55:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25253,
                            "name": "MaxSchnaider",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25122,
                            "src": "1227:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 25254,
                            "name": "merkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25137,
                            "src": "1241:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                              "typeString": "bytes32[] storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                              "typeString": "bytes32[] storage ref"
                            }
                          ],
                          "expression": {
                            "id": 25251,
                            "name": "awAlphaPass",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25119,
                            "src": "1201:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AWAlphaPass_$25107",
                              "typeString": "contract AWAlphaPass"
                            }
                          },
                          "id": 25252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isWhitelisted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25040,
                          "src": "1201:25:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,bytes32[] memory) view external returns (bool)"
                          }
                        },
                        "id": 25255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1201:52:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25250,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 269,
                      "src": "1190:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 25256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1190:64:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25257,
                  "nodeType": "ExpressionStatement",
                  "src": "1190:64:14"
                }
              ]
            },
            "functionSelector": "284cb929",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testWhitelist",
            "nameLocation": "1036:13:14",
            "parameters": {
              "id": 25235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1049:2:14"
            },
            "returnParameters": {
              "id": 25236,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1059:0:14"
            },
            "scope": 25398,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25284,
            "nodeType": "FunctionDefinition",
            "src": "1267:194:14",
            "body": {
              "id": 25283,
              "nodeType": "Block",
              "src": "1308:153:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25265,
                        "name": "MaxSchnaider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25122,
                        "src": "1327:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25262,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1318:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7072",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "1318:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1318:22:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25267,
                  "nodeType": "ExpressionStatement",
                  "src": "1318:22:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4157416c706861506173733a2043616e2774207665726966792077686974656c697374696e67",
                            "id": 25273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1372:40:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_da45b3c0a958781e7c8d21c2b33b6f103f8a848c06b6f600b5fb1c1e621951cc",
                              "typeString": "literal_string \"AWAlphaPass: Can't verify whitelisting\""
                            },
                            "value": "AWAlphaPass: Can't verify whitelisting"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_da45b3c0a958781e7c8d21c2b33b6f103f8a848c06b6f600b5fb1c1e621951cc",
                              "typeString": "literal_string \"AWAlphaPass: Can't verify whitelisting\""
                            }
                          ],
                          "id": 25272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1366:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 25271,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1366:5:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1366:47:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 25268,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1350:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7072",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6584,
                      "src": "1350:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 25275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1350:64:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25276,
                  "nodeType": "ExpressionStatement",
                  "src": "1350:64:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25280,
                        "name": "merkleProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25137,
                        "src": "1442:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      ],
                      "expression": {
                        "id": 25277,
                        "name": "awAlphaPass",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25119,
                        "src": "1424:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AWAlphaPass_$25107",
                          "typeString": "contract AWAlphaPass"
                        }
                      },
                      "id": 25279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claim",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25089,
                      "src": "1424:17:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32[] memory) external"
                      }
                    },
                    "id": 25281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1424:30:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25282,
                  "nodeType": "ExpressionStatement",
                  "src": "1424:30:14"
                }
              ]
            },
            "functionSelector": "ae2dcabf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testClaimUnwhitelisted",
            "nameLocation": "1276:22:14",
            "parameters": {
              "id": 25260,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1298:2:14"
            },
            "returnParameters": {
              "id": 25261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1308:0:14"
            },
            "scope": 25398,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25321,
            "nodeType": "FunctionDefinition",
            "src": "1467:269:14",
            "body": {
              "id": 25320,
              "nodeType": "Block",
              "src": "1495:241:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25290,
                        "name": "merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25134,
                        "src": "1540:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25287,
                        "name": "awAlphaPass",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25119,
                        "src": "1505:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AWAlphaPass_$25107",
                          "typeString": "contract AWAlphaPass"
                        }
                      },
                      "id": 25289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setWhitelistMerkleRoot",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25009,
                      "src": "1505:34:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 25291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1505:46:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25292,
                  "nodeType": "ExpressionStatement",
                  "src": "1505:46:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25296,
                        "name": "MaxSchnaider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25122,
                        "src": "1570:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25293,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1561:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7072",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "1561:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1561:22:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25298,
                  "nodeType": "ExpressionStatement",
                  "src": "1561:22:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25302,
                        "name": "merkleProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25137,
                        "src": "1611:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      ],
                      "expression": {
                        "id": 25299,
                        "name": "awAlphaPass",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25119,
                        "src": "1593:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AWAlphaPass_$25107",
                          "typeString": "contract AWAlphaPass"
                        }
                      },
                      "id": 25301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claim",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25089,
                      "src": "1593:17:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32[] memory) external"
                      }
                    },
                    "id": 25303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1593:30:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25304,
                  "nodeType": "ExpressionStatement",
                  "src": "1593:30:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25308,
                            "name": "MaxSchnaider",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25122,
                            "src": "1664:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 25306,
                            "name": "awAlphaPass",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25119,
                            "src": "1642:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AWAlphaPass_$25107",
                              "typeString": "contract AWAlphaPass"
                            }
                          },
                          "id": 25307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24465,
                          "src": "1642:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 25309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1642:35:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 25310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1679:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 25305,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1633:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1633:48:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25312,
                  "nodeType": "ExpressionStatement",
                  "src": "1633:48:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 25314,
                            "name": "awAlphaPass",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25119,
                            "src": "1700:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AWAlphaPass_$25107",
                              "typeString": "contract AWAlphaPass"
                            }
                          },
                          "id": 25315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24952,
                          "src": "1700:23:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 25316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1700:25:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 25317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1727:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 25313,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1691:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1691:38:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25319,
                  "nodeType": "ExpressionStatement",
                  "src": "1691:38:14"
                }
              ]
            },
            "functionSelector": "f33cf57b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testClaim",
            "nameLocation": "1476:9:14",
            "parameters": {
              "id": 25285,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1485:2:14"
            },
            "returnParameters": {
              "id": 25286,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1495:0:14"
            },
            "scope": 25398,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25358,
            "nodeType": "FunctionDefinition",
            "src": "1742:290:14",
            "body": {
              "id": 25357,
              "nodeType": "Block",
              "src": "1776:256:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25327,
                        "name": "merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25134,
                        "src": "1821:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25324,
                        "name": "awAlphaPass",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25119,
                        "src": "1786:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AWAlphaPass_$25107",
                          "typeString": "contract AWAlphaPass"
                        }
                      },
                      "id": 25326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setWhitelistMerkleRoot",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25009,
                      "src": "1786:34:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 25328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1786:46:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25329,
                  "nodeType": "ExpressionStatement",
                  "src": "1786:46:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25333,
                        "name": "MaxSchnaider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25122,
                        "src": "1862:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25330,
                        "name": "awAlphaPass",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25119,
                        "src": "1842:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AWAlphaPass_$25107",
                          "typeString": "contract AWAlphaPass"
                        }
                      },
                      "id": 25332,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claimTo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25062,
                      "src": "1842:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1842:33:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25335,
                  "nodeType": "ExpressionStatement",
                  "src": "1842:33:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25339,
                        "name": "MaxSchnaider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25122,
                        "src": "1894:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25336,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1885:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7072",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6543,
                      "src": "1885:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1885:22:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25341,
                  "nodeType": "ExpressionStatement",
                  "src": "1885:22:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4157416c706861506173733a20416c706861207061737320697320616c726561647920636c61696d6564",
                            "id": 25347,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1939:44:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_e260f51491494b7141295a93406910131d5b8d955feca069ca845e99181e010f",
                              "typeString": "literal_string \"AWAlphaPass: Alpha pass is already claimed\""
                            },
                            "value": "AWAlphaPass: Alpha pass is already claimed"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_e260f51491494b7141295a93406910131d5b8d955feca069ca845e99181e010f",
                              "typeString": "literal_string \"AWAlphaPass: Alpha pass is already claimed\""
                            }
                          ],
                          "id": 25346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1933:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 25345,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1933:5:14",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1933:51:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 25342,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1917:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7072",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6584,
                      "src": "1917:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 25349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1917:68:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25350,
                  "nodeType": "ExpressionStatement",
                  "src": "1917:68:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25354,
                        "name": "merkleProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25137,
                        "src": "2013:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      ],
                      "expression": {
                        "id": 25351,
                        "name": "awAlphaPass",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25119,
                        "src": "1995:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AWAlphaPass_$25107",
                          "typeString": "contract AWAlphaPass"
                        }
                      },
                      "id": 25353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claim",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25089,
                      "src": "1995:17:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32[] memory) external"
                      }
                    },
                    "id": 25355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1995:30:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25356,
                  "nodeType": "ExpressionStatement",
                  "src": "1995:30:14"
                }
              ]
            },
            "functionSelector": "1482da99",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDoubleClaim",
            "nameLocation": "1751:15:14",
            "parameters": {
              "id": 25322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1766:2:14"
            },
            "returnParameters": {
              "id": 25323,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1776:0:14"
            },
            "scope": 25398,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25383,
            "nodeType": "FunctionDefinition",
            "src": "2038:186:14",
            "body": {
              "id": 25382,
              "nodeType": "Block",
              "src": "2068:156:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25364,
                        "name": "MaxSchnaider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25122,
                        "src": "2098:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25361,
                        "name": "awAlphaPass",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25119,
                        "src": "2078:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AWAlphaPass_$25107",
                          "typeString": "contract AWAlphaPass"
                        }
                      },
                      "id": 25363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claimTo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25062,
                      "src": "2078:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2078:33:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25366,
                  "nodeType": "ExpressionStatement",
                  "src": "2078:33:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25370,
                            "name": "MaxSchnaider",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25122,
                            "src": "2152:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 25368,
                            "name": "awAlphaPass",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25119,
                            "src": "2130:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AWAlphaPass_$25107",
                              "typeString": "contract AWAlphaPass"
                            }
                          },
                          "id": 25369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24465,
                          "src": "2130:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 25371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2130:35:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 25372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2167:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 25367,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2121:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2121:48:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25374,
                  "nodeType": "ExpressionStatement",
                  "src": "2121:48:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 25376,
                            "name": "awAlphaPass",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25119,
                            "src": "2188:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AWAlphaPass_$25107",
                              "typeString": "contract AWAlphaPass"
                            }
                          },
                          "id": 25377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24952,
                          "src": "2188:23:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 25378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2188:25:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 25379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2215:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 25375,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2179:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2179:38:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25381,
                  "nodeType": "ExpressionStatement",
                  "src": "2179:38:14"
                }
              ]
            },
            "functionSelector": "d1135a53",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testClaimTo",
            "nameLocation": "2047:11:14",
            "parameters": {
              "id": 25359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2058:2:14"
            },
            "returnParameters": {
              "id": 25360,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2068:0:14"
            },
            "scope": 25398,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25397,
            "nodeType": "FunctionDefinition",
            "src": "2230:105:14",
            "body": {
              "id": 25396,
              "nodeType": "Block",
              "src": "2261:74:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "3130",
                            "id": 25389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2301:2:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            }
                          ],
                          "expression": {
                            "id": 25387,
                            "name": "awAlphaPass",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25119,
                            "src": "2280:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AWAlphaPass_$25107",
                              "typeString": "contract AWAlphaPass"
                            }
                          },
                          "id": 25388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenURI",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25106,
                          "src": "2280:20:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (uint256) view external returns (string memory)"
                          }
                        },
                        "id": 25390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2280:24:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 25391,
                            "name": "awAlphaPass",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25119,
                            "src": "2306:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AWAlphaPass_$25107",
                              "typeString": "contract AWAlphaPass"
                            }
                          },
                          "id": 25392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "baseURI",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24955,
                          "src": "2306:19:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 25393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2306:21:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 25386,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 1639,
                      "src": "2271:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 25394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2271:57:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25395,
                  "nodeType": "ExpressionStatement",
                  "src": "2271:57:14"
                }
              ]
            },
            "functionSelector": "b5b34603",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTokenURI",
            "nameLocation": "2239:12:14",
            "parameters": {
              "id": 25384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2251:2:14"
            },
            "returnParameters": {
              "id": 25385,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2261:0:14"
            },
            "scope": 25398,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 25115,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4979,
              "src": "218:4:14"
            },
            "id": 25116,
            "nodeType": "InheritanceSpecifier",
            "src": "218:4:14"
          }
        ],
        "canonicalName": "NFTTokenTest",
        "contractDependencies": [
          23220,
          25107
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          25398,
          4979,
          2049,
          1786
        ],
        "name": "NFTTokenTest",
        "nameLocation": "202:12:14",
        "scope": 25399,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0-only"
  },
  "id": 14
}