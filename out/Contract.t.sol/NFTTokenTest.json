{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMintMoreThanLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMintWithoutEtherValue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testOutOfToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testOutOfTokenWhenSupplyNotMet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSingleMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "141:1758:15:-:0;;;1572:26:0;;;-1:-1:-1;;170:28:1;;;;;141:1758:15;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "141:1758:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;201:94;;;:::i;:::-;;321:38:1;;250:64;321:38;;;;;-1:-1:-1;;;;;189:32:16;;;171:51;;159:2;144:18;321:38:1;;;;;;;;1294:291:15;;;:::i;1135:153::-;;;:::i;956:173::-;;;:::i;500:199::-;;;:::i;301:193::-;;;:::i;1819:584:0:-;;;:::i;:::-;;;398:14:16;;391:22;373:41;;361:2;346:18;1819:584:0;233:187:16;705:245:15;;;:::i;1591:306::-;;;:::i;170:28:1:-;;;;;;;;;;;;1572:26:0;;;;;;;;;201:94:15;246:42;;;;;:::i;:::-;829:2:16;811:21;;;868:1;848:18;;;841:29;-1:-1:-1;;;901:3:16;886:19;;879:37;954:3;947:4;932:20;;925:33;;;995:1;974:19;;;967:30;-1:-1:-1;;;1028:3:16;1013:19;;1006:35;1077:3;-1:-1:-1;1057:18:16;;1050:31;;;1118:1;1097:19;;;1090:30;-1:-1:-1;;;1151:3:16;1136:19;;1129:39;1200:3;1185:19;246:42:15;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;235:8:15;:53;;-1:-1:-1;;;;;;235:53:15;-1:-1:-1;;;;;235:53:15;;;;;;;;;;201:94::o;1294:291::-;1367:8;;1337:119;;-1:-1:-1;;;1337:119:15;;-1:-1:-1;;;;;1367:8:15;;;1337:119;;;1417:51:16;1406:1:15;1484:18:16;;;1477:34;1439:5:15;1527:18:16;;;1520:34;250:64:1;;1337:8:15;;1390:18:16;;1337:119:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1483:45:15;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1483:45:15;-1:-1:-1;;;1483:45:15;;;1467:62;;-1:-1:-1;;;1467:62:15;;250:64:1;;-1:-1:-1;1467:15:15;;-1:-1:-1;1467:62:15;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1540:8:15;;:38;;-1:-1:-1;;;1540:38:15;;:8;:38;;;2368:25:16;-1:-1:-1;;;;;1540:8:15;;;;-1:-1:-1;1540:16:15;;-1:-1:-1;1564:10:15;;2341:18:16;;1540:38:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1294:291::o;1135:153::-;1205:45;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1205:45:15;-1:-1:-1;;;1205:45:15;;;1189:62;;-1:-1:-1;;;1189:62:15;;250:64:1;;1189:15:15;;:62;;1205:45;;1189:62;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1262:8:15;;:19;;-1:-1:-1;;;1262:19:15;;:8;:19;;;2368:25:16;-1:-1:-1;;;;;1262:8:15;;;;-1:-1:-1;1262:16:15;;-1:-1:-1;2341:18:16;;1262:19:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1135:153::o;956:173::-;1022:51;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1022:51:15;-1:-1:-1;;;1022:51:15;;;1006:68;;-1:-1:-1;;;1006:68:15;;250:64:1;;1006:15:15;;:68;;1022:51;;1006:68;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1085:8:15;;;:37;;-1:-1:-1;;;1085:37:15;;;;;2368:25:16;;;;-1:-1:-1;;;;;1085:8:15;;-1:-1:-1;1085:16:15;;-1:-1:-1;1109:9:15;;2341:18:16;;1085:37:15;2214:185:16;500:199:15;543:8;;567:16;;;-1:-1:-1;;;567:16:15;;;;-1:-1:-1;;;;;543:8:15;;;;:16;;:8;;567:14;;:16;;;;;;;;;;;;;;;543:8;567:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:20;;586:1;567:20;:::i;:::-;543:48;;-1:-1:-1;;;;;;543:48:15;;;;;;;589:1;543:48;;;2368:25:16;2341:18;;543:48:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;601:35;610:8;;;;;;;;;-1:-1:-1;;;;;610:8:15;-1:-1:-1;;;;;610:20:15;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;634:1;601:8;:35::i;:::-;655:8;;:33;;-1:-1:-1;;;655:33:15;;682:4;655:33;;;171:51:16;646:46:15;;-1:-1:-1;;;;;655:8:15;;:18;;144::16;;655:33:15;;;;;;;;;;;;;;;;;;;;;;646:46;500:199::o;301:193::-;338:8;;362:16;;;-1:-1:-1;;;362:16:15;;;;-1:-1:-1;;;;;338:8:15;;;;:16;;:8;;362:14;;:16;;;;;;;;;;;;;;;338:8;362:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:20;;381:1;362:20;:::i;:::-;338:48;;-1:-1:-1;;;;;;338:48:15;;;;;;;384:1;338:48;;;2368:25:16;2341:18;;338:48:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;405:8:15;;:33;;-1:-1:-1;;;405:33:15;;432:4;405:33;;;171:51:16;396:46:15;;-1:-1:-1;;;;;;405:8:15;;;;-1:-1:-1;405:18:15;;-1:-1:-1;144:18:16;;405:33:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;440:1;396:8;:46::i;:::-;461:8;;:22;;;-1:-1:-1;;;461:22:15;;;;452:35;;-1:-1:-1;;;;;461:8:15;;:20;;:22;;;;;;;;;;;;;;:8;:22;;;;;;;;;;;;;;1819:584:0;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;3625:51:16;;;-1:-1:-1;;;3692:18:16;;;3685:34;2196:43:0;;;;;;;;;3598:18:16;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;705:245:15:-;746:8;;770:16;;;-1:-1:-1;;;770:16:15;;;;-1:-1:-1;;;;;746:8:15;;;;:16;;:8;;770:14;;:16;;;;;;;;;;;;;;;746:8;770:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:20;;789:1;770:20;:::i;:::-;746:48;;-1:-1:-1;;;;;;746:48:15;;;;;;;792:1;746:48;;;2368:25:16;2341:18;;746:48:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;804:8:15;;:19;;;-1:-1:-1;;;804:19:15;;;;-1:-1:-1;;;;;804:8:15;;;;-1:-1:-1;804:17:15;;-1:-1:-1;804:19:15;;;;;-1:-1:-1;804:8:15;;:19;;;;;;:8;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;833:62;850:8;;;;;;;;;-1:-1:-1;;;;;850:8:15;-1:-1:-1;;;;;850:21:15;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;842:40:15;;884:10;833:8;:62::i;:::-;922:8;;905:38;;-1:-1:-1;;;;;922:8:15;914:25;922:8;905;:38::i;1591:306::-;1680:8;;1650:118;;-1:-1:-1;;;1650:118:15;;-1:-1:-1;;;;;1680:8:15;;;1650:118;;;1417:51:16;1719:1:15;1484:18:16;;;1477:34;1752:4:15;1527:18:16;;;1520:34;250:64:1;;1650:8:15;;1390:18:16;;1650:118:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1795:45:15;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1795:45:15;-1:-1:-1;;;1795:45:15;;;1779:62;;-1:-1:-1;;;1779:62:15;;250:64:1;;-1:-1:-1;1779:15:15;;-1:-1:-1;1779:62:15;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1852:8:15;;:38;;-1:-1:-1;;;1852:38:15;;1888:1;1852:38;;;2368:25:16;-1:-1:-1;;;;;1852:8:15;;;;-1:-1:-1;1852:16:15;;-1:-1:-1;1876:10:15;;2341:18:16;;1852:38:15;2214:185:16;5202:262:0;5264:1;5259;:6;5255:203;;5286:41;;;;;5354:2:16;5336:21;;;5393:2;5373:18;;;5366:30;5432:34;5427:2;5412:18;;5405:62;-1:-1:-1;;;5498:2:16;5483:18;;5476:32;5540:3;5525:19;;5152:398;5286:41:0;;;;;;;;5346:31;;;5767:21:16;;;5824:2;5804:18;;;5797:30;-1:-1:-1;;;5858:2:16;5843:18;;5836:40;5943:4;5928:20;;5921:36;;;5346:31:0;;;;;;;5908:3:16;5346:31:0;;;5396;;;6180:21:16;;;6237:2;6217:18;;;6210:30;-1:-1:-1;;;6271:2:16;6256:18;;6249:40;6356:4;6341:20;;6334:36;;;5396:31:0;;;;;;;6321:3:16;5396:31:0;;;5441:6;:4;:6::i;:::-;5202:262;;:::o;2410:424::-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;1417:51:16;;;-1:-1:-1;;;1484:18:16;;;1477:34;;;;2705:4:0;1527:18:16;;;1520:34;2482:11:0;;1671:64;2579:43;;1390:18:16;;2645:67:0;;;-1:-1:-1;;2645:67:0;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;1565:258:16:-;1637:1;1647:113;1661:6;1658:1;1655:13;1647:113;;;1737:11;;;1731:18;1718:11;;;1711:39;1683:2;1676:10;1647:113;;;1778:6;1775:1;1772:13;1769:48;;;-1:-1:-1;;1813:1:16;1795:16;;1788:27;1565:258::o;1828:381::-;1975:2;1964:9;1957:21;1938:4;2007:6;2001:13;2050:6;2045:2;2034:9;2030:18;2023:34;2066:66;2125:6;2120:2;2109:9;2105:18;2100:2;2092:6;2088:15;2066:66;:::i;:::-;2193:2;2172:15;-1:-1:-1;;2168:29:16;2153:45;;;;2200:2;2149:54;;1828:381;-1:-1:-1;;1828:381:16:o;2594:184::-;2664:6;2717:2;2705:9;2696:7;2692:23;2688:32;2685:52;;;2733:1;2730;2723:12;2685:52;-1:-1:-1;2756:16:16;;2594:184;-1:-1:-1;2594:184:16:o;2783:265::-;2823:7;2889:1;2885;2881:6;2877:14;2874:1;2871:21;2866:1;2859:9;2852:17;2848:45;2845:168;;;2935:10;2930:3;2926:20;2923:1;2916:31;2970:4;2967:1;2960:15;2998:4;2995:1;2988:15;2845:168;-1:-1:-1;3033:9:16;;2783:265::o;3730:371::-;-1:-1:-1;;;;;;3915:33:16;;3903:46;;3972:13;;3885:3;;3994:61;3972:13;4044:1;4035:11;;4028:4;4016:17;;3994:61;:::i;:::-;4075:16;;;;4093:1;4071:24;;3730:371;-1:-1:-1;;;3730:371:16:o;4106:274::-;4235:3;4273:6;4267:13;4289:53;4335:6;4330:3;4323:4;4315:6;4311:17;4289:53;:::i;:::-;4358:16;;;;;4106:274;-1:-1:-1;;4106:274:16:o;4385:277::-;4452:6;4505:2;4493:9;4484:7;4480:23;4476:32;4473:52;;;4521:1;4518;4511:12;4473:52;4553:9;4547:16;4606:5;4599:13;4592:21;4585:5;4582:32;4572:60;;4628:1;4625;4618:12;4572:60;4651:5;4385:277;-1:-1:-1;;;4385:277:16:o;4667:290::-;4737:6;4790:2;4778:9;4769:7;4765:23;4761:32;4758:52;;;4806:1;4803;4796:12;4758:52;4832:16;;-1:-1:-1;;;;;4877:31:16;;4867:42;;4857:70;;4923:1;4920;4913:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testMint()": "9642ddaf",
    "testMintMoreThanLimit()": "830ec5ce",
    "testMintWithoutEtherValue()": "71db0ecd",
    "testOutOfToken()": "5442021e",
    "testOutOfTokenWhenSupplyNotMet()": "dcff6a85",
    "testSingleMint()": "922e35f5",
    "testWithdraw()": "d509b16c",
    "vm()": "3a768463"
  },
  "ast": {
    "absolutePath": "test/Contract.t.sol",
    "id": 25843,
    "exportedSymbols": {
      "DSTest": [
        1786
      ],
      "NFTToken": [
        25580
      ],
      "NFTTokenTest": [
        25842
      ],
      "Script": [
        2049
      ],
      "StdStorage": [
        5077
      ],
      "Test": [
        4979
      ],
      "Vm": [
        7072
      ],
      "console": [
        15136
      ],
      "console2": [
        23200
      ],
      "stdError": [
        5049
      ],
      "stdJson": [
        2409
      ],
      "stdMath": [
        6318
      ],
      "stdStorage": [
        6179
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:1857:15",
    "nodes": [
      {
        "id": 25582,
        "nodeType": "PragmaDirective",
        "src": "42:24:15",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 25583,
        "nodeType": "ImportDirective",
        "src": "68:28:15",
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25843,
        "sourceUnit": 6319,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 25585,
        "nodeType": "ImportDirective",
        "src": "97:42:15",
        "absolutePath": "src/Contract.sol",
        "file": "src/Contract.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25843,
        "sourceUnit": 25581,
        "symbolAliases": [
          {
            "foreign": {
              "id": 25584,
              "name": "NFTToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25580,
              "src": "105:8:15",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 25842,
        "nodeType": "ContractDefinition",
        "src": "141:1758:15",
        "nodes": [
          {
            "id": 25590,
            "nodeType": "VariableDeclaration",
            "src": "177:17:15",
            "constant": false,
            "mutability": "mutable",
            "name": "nftToken",
            "nameLocation": "186:8:15",
            "scope": 25842,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NFTToken_$25580",
              "typeString": "contract NFTToken"
            },
            "typeName": {
              "id": 25589,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 25588,
                "name": "NFTToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25580,
                "src": "177:8:15"
              },
              "referencedDeclaration": 25580,
              "src": "177:8:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFTToken_$25580",
                "typeString": "contract NFTToken"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 25604,
            "nodeType": "FunctionDefinition",
            "src": "201:94:15",
            "body": {
              "id": 25603,
              "nodeType": "Block",
              "src": "225:70:15",
              "statements": [
                {
                  "expression": {
                    "id": 25601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25593,
                      "name": "nftToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25590,
                      "src": "235:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NFTToken_$25580",
                        "typeString": "contract NFTToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "4d79204e4654",
                          "id": 25597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "259:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_262a8c3566f2abe9247c206cf8d622e0a44ac99a7d54c23e212de32181cf185f",
                            "typeString": "literal_string \"My NFT\""
                          },
                          "value": "My NFT"
                        },
                        {
                          "hexValue": "4d4e4654",
                          "id": 25598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "269:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_38f99777330a23b7254d6d34302160815d5489450b05e18c9e8ef3b4d4ed66f5",
                            "typeString": "literal_string \"MNFT\""
                          },
                          "value": "MNFT"
                        },
                        {
                          "hexValue": "68747470733a2f2f",
                          "id": 25599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "277:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_22a0bccaefa7e44032d5e21026b45254e49ef9bce8763cb450aaa27db3ce52a1",
                            "typeString": "literal_string \"https://\""
                          },
                          "value": "https://"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_262a8c3566f2abe9247c206cf8d622e0a44ac99a7d54c23e212de32181cf185f",
                            "typeString": "literal_string \"My NFT\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_38f99777330a23b7254d6d34302160815d5489450b05e18c9e8ef3b4d4ed66f5",
                            "typeString": "literal_string \"MNFT\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_22a0bccaefa7e44032d5e21026b45254e49ef9bce8763cb450aaa27db3ce52a1",
                            "typeString": "literal_string \"https://\""
                          }
                        ],
                        "id": 25596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "246:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_NFTToken_$25580_$",
                          "typeString": "function (string memory,string memory,string memory) returns (contract NFTToken)"
                        },
                        "typeName": {
                          "id": 25595,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 25594,
                            "name": "NFTToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 25580,
                            "src": "250:8:15"
                          },
                          "referencedDeclaration": 25580,
                          "src": "250:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NFTToken_$25580",
                            "typeString": "contract NFTToken"
                          }
                        }
                      },
                      "id": 25600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "246:42:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NFTToken_$25580",
                        "typeString": "contract NFTToken"
                      }
                    },
                    "src": "235:53:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NFTToken_$25580",
                      "typeString": "contract NFTToken"
                    }
                  },
                  "id": 25602,
                  "nodeType": "ExpressionStatement",
                  "src": "235:53:15"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "210:5:15",
            "parameters": {
              "id": 25591,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "215:2:15"
            },
            "returnParameters": {
              "id": 25592,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "225:0:15"
            },
            "scope": 25842,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25638,
            "nodeType": "FunctionDefinition",
            "src": "301:193:15",
            "body": {
              "id": 25637,
              "nodeType": "Block",
              "src": "328:166:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "35",
                        "id": 25616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "384:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          }
                        ],
                        "expression": {
                          "id": 25607,
                          "name": "nftToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25590,
                          "src": "338:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NFTToken_$25580",
                            "typeString": "contract NFTToken"
                          }
                        },
                        "id": 25609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mintNft",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25534,
                        "src": "338:16:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 25615,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 25614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 25610,
                                "name": "nftToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25590,
                                "src": "362:8:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_NFTToken_$25580",
                                  "typeString": "contract NFTToken"
                                }
                              },
                              "id": 25611,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "price",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 25450,
                              "src": "362:14:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 25612,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "362:16:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "35",
                            "id": 25613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "381:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          },
                          "src": "362:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "338:45:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 25617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "338:48:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25618,
                  "nodeType": "ExpressionStatement",
                  "src": "338:48:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 25624,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "432:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_NFTTokenTest_$25842",
                                  "typeString": "contract NFTTokenTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_NFTTokenTest_$25842",
                                  "typeString": "contract NFTTokenTest"
                                }
                              ],
                              "id": 25623,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "424:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 25622,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "424:7:15",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 25625,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "424:13:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 25620,
                            "name": "nftToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25590,
                            "src": "405:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTToken_$25580",
                              "typeString": "contract NFTToken"
                            }
                          },
                          "id": 25621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24854,
                          "src": "405:18:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 25626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "405:33:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 25627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "440:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        }
                      ],
                      "id": 25619,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "396:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "396:46:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25629,
                  "nodeType": "ExpressionStatement",
                  "src": "396:46:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 25631,
                            "name": "nftToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25590,
                            "src": "461:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTToken_$25580",
                              "typeString": "contract NFTToken"
                            }
                          },
                          "id": 25632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25442,
                          "src": "461:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 25633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "461:22:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 25634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "485:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        }
                      ],
                      "id": 25630,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "452:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "452:35:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25636,
                  "nodeType": "ExpressionStatement",
                  "src": "452:35:15"
                }
              ]
            },
            "functionSelector": "9642ddaf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMint",
            "nameLocation": "310:8:15",
            "parameters": {
              "id": 25605,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "318:2:15"
            },
            "returnParameters": {
              "id": 25606,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "328:0:15"
            },
            "scope": 25842,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25672,
            "nodeType": "FunctionDefinition",
            "src": "500:199:15",
            "body": {
              "id": 25671,
              "nodeType": "Block",
              "src": "533:166:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 25650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "589:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 25641,
                          "name": "nftToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25590,
                          "src": "543:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NFTToken_$25580",
                            "typeString": "contract NFTToken"
                          }
                        },
                        "id": 25643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mintNft",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25534,
                        "src": "543:16:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 25649,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 25648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 25644,
                                "name": "nftToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25590,
                                "src": "567:8:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_NFTToken_$25580",
                                  "typeString": "contract NFTToken"
                                }
                              },
                              "id": 25645,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "price",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 25450,
                              "src": "567:14:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 25646,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "567:16:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 25647,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "586:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "567:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "543:45:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 25651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "543:48:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25652,
                  "nodeType": "ExpressionStatement",
                  "src": "543:48:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 25654,
                            "name": "nftToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25590,
                            "src": "610:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTToken_$25580",
                              "typeString": "contract NFTToken"
                            }
                          },
                          "id": 25655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25442,
                          "src": "610:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 25656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "610:22:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 25657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "634:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 25653,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "601:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "601:35:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25659,
                  "nodeType": "ExpressionStatement",
                  "src": "601:35:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 25665,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "682:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_NFTTokenTest_$25842",
                                  "typeString": "contract NFTTokenTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_NFTTokenTest_$25842",
                                  "typeString": "contract NFTTokenTest"
                                }
                              ],
                              "id": 25664,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "674:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 25663,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "674:7:15",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 25666,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "674:13:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 25661,
                            "name": "nftToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25590,
                            "src": "655:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTToken_$25580",
                              "typeString": "contract NFTToken"
                            }
                          },
                          "id": 25662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24854,
                          "src": "655:18:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 25667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "655:33:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 25668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "690:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 25660,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "646:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "646:46:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25670,
                  "nodeType": "ExpressionStatement",
                  "src": "646:46:15"
                }
              ]
            },
            "functionSelector": "922e35f5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSingleMint",
            "nameLocation": "509:14:15",
            "parameters": {
              "id": 25639,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "523:2:15"
            },
            "returnParameters": {
              "id": 25640,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "533:0:15"
            },
            "scope": 25842,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25713,
            "nodeType": "FunctionDefinition",
            "src": "705:245:15",
            "body": {
              "id": 25712,
              "nodeType": "Block",
              "src": "736:214:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 25684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "792:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 25675,
                          "name": "nftToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25590,
                          "src": "746:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NFTToken_$25580",
                            "typeString": "contract NFTToken"
                          }
                        },
                        "id": 25677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mintNft",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25534,
                        "src": "746:16:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 25683,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 25682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 25678,
                                "name": "nftToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25590,
                                "src": "770:8:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_NFTToken_$25580",
                                  "typeString": "contract NFTToken"
                                }
                              },
                              "id": 25679,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "price",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 25450,
                              "src": "770:14:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 25680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "770:16:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 25681,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "789:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "770:20:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "746:45:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 25685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "746:48:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25686,
                  "nodeType": "ExpressionStatement",
                  "src": "746:48:15"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 25687,
                        "name": "nftToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25590,
                        "src": "804:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTToken_$25580",
                          "typeString": "contract NFTToken"
                        }
                      },
                      "id": 25689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25562,
                      "src": "804:17:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 25690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "804:19:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25691,
                  "nodeType": "ExpressionStatement",
                  "src": "804:19:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 25695,
                                  "name": "nftToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25590,
                                  "src": "850:8:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_NFTToken_$25580",
                                    "typeString": "contract NFTToken"
                                  }
                                },
                                "id": 25696,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "vaultAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 25456,
                                "src": "850:21:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 25697,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "850:23:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 25694,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "842:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25693,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "842:7:15",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "842:32:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 25699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "842:40:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e3135",
                        "id": 25700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "884:10:15",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_150000000000000000_by_1",
                          "typeString": "int_const 150000000000000000"
                        },
                        "value": "0.15"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_150000000000000000_by_1",
                          "typeString": "int_const 150000000000000000"
                        }
                      ],
                      "id": 25692,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "833:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "833:62:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25702,
                  "nodeType": "ExpressionStatement",
                  "src": "833:62:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 25706,
                              "name": "nftToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25590,
                              "src": "922:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NFTToken_$25580",
                                "typeString": "contract NFTToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_NFTToken_$25580",
                                "typeString": "contract NFTToken"
                              }
                            ],
                            "id": 25705,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "914:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25704,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "914:7:15",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "914:17:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 25708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "914:25:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 25709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "941:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 25703,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "905:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "905:38:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25711,
                  "nodeType": "ExpressionStatement",
                  "src": "905:38:15"
                }
              ]
            },
            "functionSelector": "d509b16c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testWithdraw",
            "nameLocation": "714:12:15",
            "parameters": {
              "id": 25673,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "726:2:15"
            },
            "returnParameters": {
              "id": 25674,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "736:0:15"
            },
            "scope": 25842,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25734,
            "nodeType": "FunctionDefinition",
            "src": "956:173:15",
            "body": {
              "id": 25733,
              "nodeType": "Block",
              "src": "996:133:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4d6178416d6f756e74506572547278526561636865642829",
                            "id": 25721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1046:26:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c6d2ab8df0e0f9ecfae202a2748198ad8a2ac3150904783a43791066cff78b8a",
                              "typeString": "literal_string \"MaxAmountPerTrxReached()\""
                            },
                            "value": "MaxAmountPerTrxReached()"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c6d2ab8df0e0f9ecfae202a2748198ad8a2ac3150904783a43791066cff78b8a",
                              "typeString": "literal_string \"MaxAmountPerTrxReached()\""
                            }
                          ],
                          "expression": {
                            "id": 25719,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1022:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 25720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "1022:23:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 25722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1022:51:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 25716,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1006:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7072",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6584,
                      "src": "1006:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 25723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1006:68:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25724,
                  "nodeType": "ExpressionStatement",
                  "src": "1006:68:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "38",
                        "id": 25730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1120:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_8_by_1",
                          "typeString": "int_const 8"
                        },
                        "value": "8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_8_by_1",
                          "typeString": "int_const 8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_8_by_1",
                            "typeString": "int_const 8"
                          }
                        ],
                        "expression": {
                          "id": 25725,
                          "name": "nftToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25590,
                          "src": "1085:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NFTToken_$25580",
                            "typeString": "contract NFTToken"
                          }
                        },
                        "id": 25727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mintNft",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25534,
                        "src": "1085:16:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 25729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "312e32",
                          "id": 25728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1109:9:15",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1200000000000000000_by_1",
                            "typeString": "int_const 1200000000000000000"
                          },
                          "value": "1.2"
                        }
                      ],
                      "src": "1085:34:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 25731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1085:37:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25732,
                  "nodeType": "ExpressionStatement",
                  "src": "1085:37:15"
                }
              ]
            },
            "functionSelector": "830ec5ce",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMintMoreThanLimit",
            "nameLocation": "965:21:15",
            "parameters": {
              "id": 25714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "986:2:15"
            },
            "returnParameters": {
              "id": 25715,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "996:0:15"
            },
            "scope": 25842,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25753,
            "nodeType": "FunctionDefinition",
            "src": "1135:153:15",
            "body": {
              "id": 25752,
              "nodeType": "Block",
              "src": "1179:109:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "57726f6e674574686572416d6f756e742829",
                            "id": 25742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1229:20:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_31fc877fe7435009d9d06d1c4a2fb03852b6838c27dcf2b5c7b6f767e49754ca",
                              "typeString": "literal_string \"WrongEtherAmount()\""
                            },
                            "value": "WrongEtherAmount()"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_31fc877fe7435009d9d06d1c4a2fb03852b6838c27dcf2b5c7b6f767e49754ca",
                              "typeString": "literal_string \"WrongEtherAmount()\""
                            }
                          ],
                          "expression": {
                            "id": 25740,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1205:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 25741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "1205:23:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 25743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1205:45:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 25737,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1189:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7072",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6584,
                      "src": "1189:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 25744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1189:62:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25745,
                  "nodeType": "ExpressionStatement",
                  "src": "1189:62:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 25749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1279:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 25746,
                        "name": "nftToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25590,
                        "src": "1262:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTToken_$25580",
                          "typeString": "contract NFTToken"
                        }
                      },
                      "id": 25748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mintNft",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25534,
                      "src": "1262:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 25750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1262:19:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25751,
                  "nodeType": "ExpressionStatement",
                  "src": "1262:19:15"
                }
              ]
            },
            "functionSelector": "71db0ecd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMintWithoutEtherValue",
            "nameLocation": "1144:25:15",
            "parameters": {
              "id": 25735,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1169:2:15"
            },
            "returnParameters": {
              "id": 25736,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1179:0:15"
            },
            "scope": 25842,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25797,
            "nodeType": "FunctionDefinition",
            "src": "1294:291:15",
            "body": {
              "id": 25796,
              "nodeType": "Block",
              "src": "1327:258:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25761,
                            "name": "nftToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25590,
                            "src": "1367:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTToken_$25580",
                              "typeString": "contract NFTToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NFTToken_$25580",
                              "typeString": "contract NFTToken"
                            }
                          ],
                          "id": 25760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1359:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25759,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1359:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1359:17:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "37",
                                "id": 25767,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1406:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_7_by_1",
                                  "typeString": "int_const 7"
                                },
                                "value": "7"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_7_by_1",
                                  "typeString": "int_const 7"
                                }
                              ],
                              "id": 25766,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1398:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 25765,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1398:7:15",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 25768,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1398:10:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 25764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1390:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 25763,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1390:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1390:19:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "3130303030",
                                "id": 25774,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1439:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10000_by_1",
                                  "typeString": "int_const 10000"
                                },
                                "value": "10000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_10000_by_1",
                                  "typeString": "int_const 10000"
                                }
                              ],
                              "id": 25773,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1431:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 25772,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1431:7:15",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 25775,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1431:14:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 25771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1423:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 25770,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1423:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1423:23:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25756,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1337:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7072",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "store",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6370,
                      "src": "1337:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,bytes32,bytes32) external"
                      }
                    },
                    "id": 25777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1337:119:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25778,
                  "nodeType": "ExpressionStatement",
                  "src": "1337:119:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4d6178537570706c79526561636865642829",
                            "id": 25784,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1507:20:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_d05cb6091eca5195bafa6239a84c522c8a84ef9a1bc48fa85ed591c6381235da",
                              "typeString": "literal_string \"MaxSupplyReached()\""
                            },
                            "value": "MaxSupplyReached()"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_d05cb6091eca5195bafa6239a84c522c8a84ef9a1bc48fa85ed591c6381235da",
                              "typeString": "literal_string \"MaxSupplyReached()\""
                            }
                          ],
                          "expression": {
                            "id": 25782,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1483:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 25783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "1483:23:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 25785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1483:45:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 25779,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1467:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7072",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25781,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6584,
                      "src": "1467:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 25786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1467:62:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25787,
                  "nodeType": "ExpressionStatement",
                  "src": "1467:62:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 25793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1576:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 25788,
                          "name": "nftToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25590,
                          "src": "1540:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NFTToken_$25580",
                            "typeString": "contract NFTToken"
                          }
                        },
                        "id": 25790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mintNft",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25534,
                        "src": "1540:16:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 25792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e3135",
                          "id": 25791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1564:10:15",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_150000000000000000_by_1",
                            "typeString": "int_const 150000000000000000"
                          },
                          "value": "0.15"
                        }
                      ],
                      "src": "1540:35:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 25794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1540:38:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25795,
                  "nodeType": "ExpressionStatement",
                  "src": "1540:38:15"
                }
              ]
            },
            "functionSelector": "5442021e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOutOfToken",
            "nameLocation": "1303:14:15",
            "parameters": {
              "id": 25754,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1317:2:15"
            },
            "returnParameters": {
              "id": 25755,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1327:0:15"
            },
            "scope": 25842,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25841,
            "nodeType": "FunctionDefinition",
            "src": "1591:306:15",
            "body": {
              "id": 25840,
              "nodeType": "Block",
              "src": "1640:257:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25805,
                            "name": "nftToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25590,
                            "src": "1680:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTToken_$25580",
                              "typeString": "contract NFTToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NFTToken_$25580",
                              "typeString": "contract NFTToken"
                            }
                          ],
                          "id": 25804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1672:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25803,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1672:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1672:17:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "37",
                                "id": 25811,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1719:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_7_by_1",
                                  "typeString": "int_const 7"
                                },
                                "value": "7"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_7_by_1",
                                  "typeString": "int_const 7"
                                }
                              ],
                              "id": 25810,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1711:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 25809,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1711:7:15",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 25812,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1711:10:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 25808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1703:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 25807,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1703:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1703:19:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "39393938",
                                "id": 25818,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1752:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_9998_by_1",
                                  "typeString": "int_const 9998"
                                },
                                "value": "9998"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_9998_by_1",
                                  "typeString": "int_const 9998"
                                }
                              ],
                              "id": 25817,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1744:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 25816,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1744:7:15",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 25819,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1744:13:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 25815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1736:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 25814,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1736:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1736:22:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25800,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1650:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7072",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "store",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6370,
                      "src": "1650:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,bytes32,bytes32) external"
                      }
                    },
                    "id": 25821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1650:118:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25822,
                  "nodeType": "ExpressionStatement",
                  "src": "1650:118:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4d6178537570706c79526561636865642829",
                            "id": 25828,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1819:20:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_d05cb6091eca5195bafa6239a84c522c8a84ef9a1bc48fa85ed591c6381235da",
                              "typeString": "literal_string \"MaxSupplyReached()\""
                            },
                            "value": "MaxSupplyReached()"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_d05cb6091eca5195bafa6239a84c522c8a84ef9a1bc48fa85ed591c6381235da",
                              "typeString": "literal_string \"MaxSupplyReached()\""
                            }
                          ],
                          "expression": {
                            "id": 25826,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1795:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 25827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "1795:23:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 25829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1795:45:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 25823,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1779:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7072",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6584,
                      "src": "1779:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 25830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1779:62:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25831,
                  "nodeType": "ExpressionStatement",
                  "src": "1779:62:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 25837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1888:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          }
                        ],
                        "expression": {
                          "id": 25832,
                          "name": "nftToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25590,
                          "src": "1852:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NFTToken_$25580",
                            "typeString": "contract NFTToken"
                          }
                        },
                        "id": 25834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mintNft",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25534,
                        "src": "1852:16:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 25836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e3435",
                          "id": 25835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1876:10:15",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_450000000000000000_by_1",
                            "typeString": "int_const 450000000000000000"
                          },
                          "value": "0.45"
                        }
                      ],
                      "src": "1852:35:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 25838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1852:38:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25839,
                  "nodeType": "ExpressionStatement",
                  "src": "1852:38:15"
                }
              ]
            },
            "functionSelector": "dcff6a85",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOutOfTokenWhenSupplyNotMet",
            "nameLocation": "1600:30:15",
            "parameters": {
              "id": 25798,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1630:2:15"
            },
            "returnParameters": {
              "id": 25799,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1640:0:15"
            },
            "scope": 25842,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 25586,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4979,
              "src": "166:4:15"
            },
            "id": 25587,
            "nodeType": "InheritanceSpecifier",
            "src": "166:4:15"
          }
        ],
        "canonicalName": "NFTTokenTest",
        "contractDependencies": [
          25580
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          25842,
          4979,
          2049,
          1786
        ],
        "name": "NFTTokenTest",
        "nameLocation": "150:12:15",
        "scope": 25843,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0-only"
  },
  "id": 15
}